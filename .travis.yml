sudo: required

language: go

services:
  - docker

env:
  global:
    # Specifies the kubernetes version.
    - KUBERNETES_VERSION=v1.10.0
    # This moves Kubernetes specific config files.
    - CHANGE_MINIKUBE_NONE_USER=true

before_script:
  # Download kubectl, which is a requirement for using minikube.
  - curl -sLo kubectl https://storage.googleapis.com/kubernetes-release/release/${KUBERNETES_VERSION}/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
  # Download minikube.
  - curl -sLo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
  # Setup minikube.
  - sudo minikube start --vm-driver=none --bootstrapper=localkube --kubernetes-version=${KUBERNETES_VERSION}
  # Fix the kubectl context, as it's often stale.
  - sudo minikube update-context
  # Wait for Kubernetes to be up and ready.
  - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done

script:
  # Build the current state into a docker image.
  - ./containers/build
  # Deploy multiple duplicated of this container onto minikube.
  - ./containers/kube/deploy
  # Wait for deployed application to be ready.
  - JSONPATH='{.metadata.name}:{.status.availableReplicas}'; until kubectl get deployments sip -o jsonpath="$JSONPATH" 2>&1 | grep -q "sip:10"; do sleep 1; done
  # Fetch the service port
  - export SIP_PORT="$(kubectl get deployments sip -o jsonpath='{.spec.ports[0].nodePort}' 2>&1)"
  - echo "${SIP_PORT}"

  # Clean everything from the minikube.
  - ./containers/kube/clean
